% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/p_table_helpers.R
\name{expand_input_tibble}
\alias{expand_input_tibble}
\title{Expand input tibble(s) by adding a 'More' column and missing rows, then combine if population}
\usage{
expand_input_tibble(x, type, source = FALSE)
}
\arguments{
\item{x}{List of tibble(s). For type "preceptor", a list of length 1.
For type "population", a list of length 2.}

\item{type}{Character string. Either "preceptor" or "population".}

\item{source}{Logical, whether the population table includes a 'Source' column. Default FALSE.}
}
\value{
A single tibble with added missing rows and 'More' column, suitable for piping to gt.
}
\description{
Processes one or two input tibbles to add missing rows (to at least 3 rows),
a final "More" column with "..." in the last row, and combines them if type is 'population'.
}
\details{
For "preceptor": adds missing rows to ensure at least 3 rows, adds a "More" column
with NA except last row contains "...".

For "population": expands each tibble similarly, then combines them with
empty rows before, between, and after, then adds "More" column.
}
\examples{
# Preceptor example
pre_tib <- tibble::tribble(~Unit, ~Year, ~Outcome,
                           "A", "2020", "5",
                           "B", "2021", "6")
expand_input_tibble(list(pre_tib), "preceptor")

# Population example
pop1 <- tibble::tribble(~Source, ~Unit, ~Year,
                       "S1", "A", "2020",
                       "S2", "B", "2021")
pop2 <- tibble::tribble(~Source, ~Unit, ~Year,
                       "S1", "C", "2022",
                       "S2", "D", "2023")
expand_input_tibble(list(pop1, pop2), "population", source = TRUE)

}
